import javax.swing.*;
import java.io.*;
import java.util.Scanner;

public class Main extends javax.swing.JFrame {

    DefaultListModel listModel = new DefaultListModel();

    public Main() {
        initComponents();

        ReadListAtStart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        NewNoteButton = new javax.swing.JButton();
        NotesTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        NotesList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        NotesEditor = new javax.swing.JEditorPane();
        SaveNote = new javax.swing.JButton();
        CancelNote = new javax.swing.JButton();
        TipsNote = new javax.swing.JLabel();
        MainMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Notes");
        setName("NotesFrame"); // NOI18N
        setUndecorated(false);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        NewNoteButton.setText("New Note");
        NewNoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewNoteButtonActionPerformed(evt);
            }
        });

        NotesList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NotesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                NotesListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(NotesList);

        NotesEditor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(NotesEditor);

        SaveNote.setText("Save");
        SaveNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveNoteActionPerformed(evt);
            }
        });

        CancelNote.setText("Cancel");
        CancelNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelNoteActionPerformed(evt);
            }
        });

        TipsNote.setText("*Select a note to edit");

        javax.swing.GroupLayout NotesTabLayout = new javax.swing.GroupLayout(NotesTab);
        NotesTab.setLayout(NotesTabLayout);
        NotesTabLayout.setHorizontalGroup(
                NotesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NotesTabLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(NotesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                                        .addGroup(NotesTabLayout.createSequentialGroup()
                                                .addComponent(TipsNote)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(CancelNote)
                                                .addGap(18, 18, 18)
                                                .addComponent(SaveNote, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        NotesTabLayout.setVerticalGroup(
                NotesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(NotesTabLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(NotesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                                        .addGroup(NotesTabLayout.createSequentialGroup()
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(NotesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(SaveNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(CancelNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(TipsNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap())
        );

        MainMenuButton.setText("Main Menu");
        MainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(NewNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 456, Short.MAX_VALUE)
                                .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(NotesTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(NewNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(545, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(NotesTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>

    private void NewNoteButtonActionPerformed(java.awt.event.ActionEvent evt) {

        NewNote();
    }

    private void SaveNoteActionPerformed(java.awt.event.ActionEvent evt) {

        if (!NotesList.isSelectionEmpty())
            Save();
    }

    private void CancelNoteActionPerformed(java.awt.event.ActionEvent evt) {

        if (!NotesList.isSelectionEmpty())
            Cancel();
    }

    private void NotesListValueChanged(javax.swing.event.ListSelectionEvent evt) {

        if (evt.getValueIsAdjusting())
            ReadNoteFromFile(NotesList.getSelectedValue());
    }

    private void MainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton CancelNote;
    private javax.swing.JButton MainMenuButton;
    private javax.swing.JButton NewNoteButton;
    private javax.swing.JEditorPane NotesEditor;
    private javax.swing.JList<String> NotesList;
    private javax.swing.JPanel NotesTab;
    private javax.swing.JButton SaveNote;
    private javax.swing.JLabel TipsNote;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration

    public void NewNote ()
    {
        String noteTitle = JOptionPane.showInputDialog("Please enter the Note Title");

        while (noteTitle.isEmpty())
        {
            if (noteTitle.isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Ops! File could not be Created!Please Relaunch the Program",
                        "File Creation Error", JOptionPane.ERROR_MESSAGE);
            }

            noteTitle = JOptionPane.showInputDialog("Please enter the Note Title");
        }

        if (listModel.contains(noteTitle))
        {
            JOptionPane.showMessageDialog(null, "Note With this name already exists!",
                    "File Creation Error", JOptionPane.ERROR_MESSAGE);
        }

        else
        {
            listModel.addElement(noteTitle);

            NotesList.setModel(listModel);
        }

        CreateFile(noteTitle);
        //ReadFromFile(noteTitle);
        WriteListOnClick();
    }

    public void Cancel ()
    {
        NotesEditor.setText(null);
    }

    public void Save ()
    {
        WriteNoteToFile(NotesList.getSelectedValue());
    }

    public void CreateFile (String title)
    {
        File file = new File("src//companion//notes//" + title + ".txt");
    }

    private void WriteNoteToFile(String title)
    {
        try (PrintWriter pw = new PrintWriter("src//companion//notes//" + title + ".txt"))
        {
            pw.println(NotesEditor.getText());
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Ops! File could not be Created!Please Relaunch the Program",
                    "File Creation Error",JOptionPane.WARNING_MESSAGE);
        }
    }

    private void ReadNoteFromFile(String title)
    {
        File f1 = new File("src//companion//notes//" + title + ".txt");

        if(f1.exists())
        {
            try (Scanner sc = new Scanner(new File("src//companion//notes//" + title + ".txt")))
            {
                StringBuilder string = new StringBuilder();
                String lineSeparator = System.getProperty("line.separator");

                while (sc.hasNextLine())
                {
                    string.append(sc.nextLine() + lineSeparator);
                }

                NotesEditor.setText(string.toString());
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Ops! File could not be read!\nPlease Relaunch the Program",
                        "Data Read Error", JOptionPane.WARNING_MESSAGE);
            }
        }
        else
            NotesEditor.setText("");
    }

    private void ReadListAtStart()
    {
        File f1 = new File("src//companion//notes//NoteList.txt");

        if(f1.exists())
        {
            try (Scanner sc = new Scanner(new File("src//companion//notes//NoteList.txt")))
            {
                while (sc.hasNext())
                {
                    listModel.addElement(sc.nextLine());
                }

                NotesList.setModel(listModel);
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Data could not be read!\nPlease Relaunch The Program",
                        "Data read error", JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    private void WriteListOnClick()
    {
        try (PrintWriter pw = new PrintWriter("src//companion//notes//NoteList.txt"))
        {
            DefaultListModel model = (DefaultListModel) NotesList.getModel();

            for (int i=0; i < model.getSize() ; i++)
            {
                pw.println(model.getElementAt(i));
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Ops! Data could not be Written!\nPlease Relaunch the Program",
                    "Data Creation Error",JOptionPane.WARNING_MESSAGE);
        }
    }
}
